# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Plan {
  plan_id: String!
  price: Float!
  time: String!
  course: Course!
  course_id: String!
  createdAt: String!
}

type Course {
  course_id: String!
  name: String!
  title: String!
  category: String!
  details: String!
  learn: [String!]!
  plans: [Plan!]!
  image: String!
  trainer: Trainer!
  trainer_id: String!
  createdAt: String!
}

type Trainer {
  trainer_id: String!
  first_name: String!
  last_name: String!
  email: String!
  image: String!
  createdAt: String!
  courses: [Course!]
}

type UserAddress {
  user_address_id: String!
  address: String!
  city: String!
  zip_code: String!
  phone_number: String!
  user: User!
}

type User {
  user_id: String!
  first_name: String!
  last_name: String!
  email: String!
  password: String
  user_courses: [UserCourse!]
  user_address: UserAddress
  createdAt: String!
  hashedRt: String
}

type UserCourse {
  user_course_id: String!
  user: User!
  user_id: String!
  course: Course!
  course_id: String!
  plan: Plan!
  plan_id: String!
  time: String
  quiz: JSON
  createdAt: String!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type Status {
  status: String!
}

type LoginResponse {
  user: User!
  refresh: String!
}

type RegisterResponse {
  user: User!
}

type UserCoursePayment {
  user_course_payment_id: String!
  user_couse_id: String!
  iyzico_payment_id: String!
  paid_price: Float!
  price: Float!
  iyzico_commission_fee: Float!
}

type Query {
  trainers: [Trainer!]!
  trainer(id: String!): Trainer!
  courses: [Course!]!
  course(id: String!): Course!
  plans: [Plan!]!
  plan(id: String!): Plan!
  userCourses: [UserCourse!]!
  userCourse(id: Int!): UserCourse!
  users: [User!]!
  user(email: String!): User!
  userAddress(id: String!): UserAddress!
  userCoursePayment(id: Int!): UserCoursePayment!
}

type Mutation {
  createTrainer(createTrainerInput: CreateTrainerInput!): Trainer!
  updateTrainer(updateTrainerInput: UpdateTrainerInput!): Trainer!
  removeTrainer(id: Int!): Trainer!
  createCourse(createCourseInput: CreateCourseInput!): Course!
  updateCourse(updateCourseInput: UpdateCourseInput!): Course!
  removeCourse(id: Int!): Course!
  createPlan(createPlanInput: CreatePlanInput!): Plan!
  updatePlan(updatePlanInput: UpdatePlanInput!): Plan!
  removePlan(id: Int!): Plan!
  createUserCourse(createUserCourseInput: CreateUserCourseInput!): Status!
  createMembership(createMembership: CreateMembershipInput!): Status!
  updateUserCourse(updateUserCourseInput: UpdateUserCourseInput!): UserCourse!
  removeUserCourse(id: Int!): UserCourse!
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(id: Int!): User!
  login(loginInput: LoginInput!): LoginResponse!
  register(registerInput: RegisterInput!): RegisterResponse!
  createUserAddress(createUserAddressInput: CreateUserAddressInput!): UserAddress!
  updateUserAddress(updateUserAddressInput: UpdateUserAddressInput!): UserAddress!
  removeUserAddress(id: Int!): UserAddress!
  createUserCoursePayment(createUserCoursePaymentInput: CreateUserCoursePaymentInput!): UserCoursePayment!
  updateUserCoursePayment(updateUserCoursePaymentInput: UpdateUserCoursePaymentInput!): UserCoursePayment!
  removeUserCoursePayment(id: Int!): UserCoursePayment!
}

input CreateTrainerInput {
  first_name: String!
  last_name: String!
  email: String!
  image: String!
  password: String!
}

input UpdateTrainerInput {
  first_name: String
  last_name: String
  email: String
  image: String
  password: String
  id: Int!
}

input CreateCourseInput {
  name: String!
  title: String!
  category: String!
  details: String!
  learn: [String!]!
  image: String!
  trainer_id: String!
}

input UpdateCourseInput {
  name: String
  title: String
  category: String
  details: String
  learn: [String!]
  image: String
  trainer_id: String
  id: Int!
}

input CreatePlanInput {
  price: Float!
  time: String!
  course_id: String!
}

input UpdatePlanInput {
  price: Float
  time: String
  course_id: String
  id: Int!
}

input CreateUserCourseInput {
  user_id: String!
  course_id: String!
  plan_id: String!
  time: String
  quiz: JSON
  address: String!
  city: String!
  phone_number: String!
  zip_code: String!
  card_number: String!
  owner: String!
  cvv: String!
  expire_y: String!
  expire_m: String!
  threeD: Boolean!
}

input CreateMembershipInput {
  quiz: JSON
  time: String
}

input UpdateUserCourseInput {
  user_id: String
  course_id: String
  plan_id: String
  time: String
  quiz: JSON
  address: String
  city: String
  phone_number: String
  zip_code: String
  card_number: String
  owner: String
  cvv: String
  expire_y: String
  expire_m: String
  threeD: Boolean
  id: Int!
}

input CreateUserInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateUserInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input LoginInput {
  email: String!
  password: String!
  token: String!
}

input RegisterInput {
  email: String!
  password: String!
  first_name: String!
  last_name: String!
  token: String!
}

input CreateUserAddressInput {
  address: String!
  city: String!
  zip_code: String!
  phone_number: String!
  user_id: String!
}

input UpdateUserAddressInput {
  address: String
  city: String
  zip_code: String
  phone_number: String
  user_id: String
  id: Int!
}

input CreateUserCoursePaymentInput {
  user_couse_id: String!
  iyzico_payment_id: String!
  paid_price: Float!
  price: Float!
  iyzico_commission_fee: Float!
}

input UpdateUserCoursePaymentInput {
  user_couse_id: String
  iyzico_payment_id: String
  paid_price: Float
  price: Float
  iyzico_commission_fee: Float
  id: Int!
}